{"ast":null,"code":"var _jsxFileName = \"/Users/khaidemsandipsingha/Documents/CoronaIndia2/covidIndia2/src/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchTimeData } from \"../api/fetchApi\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Charts = () => {\n  const [timeData, setTimeData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const timeData = await fetchTimeData();\n      setTimeData(timeData);\n      console.log(timeData);\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = timeData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: timeData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: timeData.map(({\n          confirmed\n        }) => confirmed),\n        label: \"Confirmed\",\n        borderColor: \"#3333ff\",\n        fill: true\n      }, {\n        data: timeData.map(({\n          deaths\n        }) => deaths),\n        label: \"Deaths\",\n        borderColor: \"red\",\n        backgroundColor: \"rgba(255,0,0,0.5)\",\n        fill: true\n      }, {\n        data: timeData.map(({\n          deaths\n        }) => deaths),\n        label: \"Recovered\",\n        borderColor: \"green\",\n        backgroundColor: \"rgba(0,255,0,0.5)\",\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  }, lineChart);\n};\n\nexport default Charts;","map":{"version":3,"sources":["/Users/khaidemsandipsingha/Documents/CoronaIndia2/covidIndia2/src/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchTimeData","Line","Bar","styles","Charts","timeData","setTimeData","fetchAPI","console","log","lineChart","length","labels","map","date","datasets","data","confirmed","label","borderColor","fill","deaths","backgroundColor","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,QAAQ,GAAG,YAAY;AAC3B,YAAMF,QAAQ,GAAG,MAAML,aAAa,EAApC;AACAM,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD,KAJD;;AAMAE,IAAAA,QAAQ;AACT,GARQ,EAQN,EARM,CAAT;AAUA,QAAMG,SAAS,GAAGL,QAAQ,CAACM,MAAT,gBAChB,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAEP,QAAQ,CAACQ,GAAT,CAAa,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA3B,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,IAAI,EAAEX,QAAQ,CAACQ,GAAT,CAAa,CAAC;AAAEI,UAAAA;AAAF,SAAD,KAAmBA,SAAhC,CADR;AAEEC,QAAAA,KAAK,EAAE,WAFT;AAGEC,QAAAA,WAAW,EAAE,SAHf;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADQ,EAOR;AACEJ,QAAAA,IAAI,EAAEX,QAAQ,CAACQ,GAAT,CAAa,CAAC;AAAEQ,UAAAA;AAAF,SAAD,KAAgBA,MAA7B,CADR;AAEEH,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,WAAW,EAAE,KAHf;AAIEG,QAAAA,eAAe,EAAE,mBAJnB;AAKEF,QAAAA,IAAI,EAAE;AALR,OAPQ,EAcR;AACEJ,QAAAA,IAAI,EAAEX,QAAQ,CAACQ,GAAT,CAAa,CAAC;AAAEQ,UAAAA;AAAF,SAAD,KAAgBA,MAA7B,CADR;AAEEH,QAAAA,KAAK,EAAE,WAFT;AAGEC,QAAAA,WAAW,EAAE,OAHf;AAIEG,QAAAA,eAAe,EAAE,mBAJnB;AAKEF,QAAAA,IAAI,EAAE;AALR,OAdQ;AAFN,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,GA4Bd,IA5BJ;AA8BA,sBAAO;AAAK,IAAA,SAAS,EAAEjB,MAAM,CAACoB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCb,SAAnC,CAAP;AACD,CA3CD;;AA6CA,eAAeN,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchTimeData } from \"../api/fetchApi\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Charts = () => {\n  const [timeData, setTimeData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const timeData = await fetchTimeData();\n      setTimeData(timeData);\n      console.log(timeData);\n    };\n\n    fetchAPI();\n  }, []);\n\n  const lineChart = timeData.length ? (\n    <Line\n      data={{\n        labels: timeData.map(({ date }) => date),\n        datasets: [\n          {\n            data: timeData.map(({ confirmed }) => confirmed),\n            label: \"Confirmed\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: timeData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255,0,0,0.5)\",\n            fill: true,\n          },\n          {\n            data: timeData.map(({ deaths }) => deaths),\n            label: \"Recovered\",\n            borderColor: \"green\",\n            backgroundColor: \"rgba(0,255,0,0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  return <div className={styles.container}>{lineChart}</div>;\n};\n\nexport default Charts;\n"]},"metadata":{},"sourceType":"module"}