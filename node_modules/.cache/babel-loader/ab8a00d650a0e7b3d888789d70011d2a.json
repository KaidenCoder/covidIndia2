{"ast":null,"code":"const url = 'https://api.rootnet.in/covid19-in/stats/latest'; // const url = 'https://api.covid19india.org/state_district_wise.json'\n\nconst timeUrl = 'https://api.covid19india.org/data.json'; // Fetch Time series line graph\n\nexport const fetchTimeData = async () => {\n  try {\n    const {\n      cases_time_series\n    } = await (await fetch(timeUrl)).json();\n    const modifiedData = cases_time_series.map(timeData => ({\n      confirmed: timeData.totalconfirmed,\n      deaths: timeData.totaldeceased,\n      recovered: timeData.totalrecovered,\n      active: timeData.totalconfirmed - timeData.totaldeceased - timeData.totalrecovered,\n      date: timeData.date\n    }));\n    return modifiedData;\n  } catch (error) {}\n}; // Fetch State wise details\n\nexport const fetchStateWise = async () => {\n  try {\n    const {\n      statewise\n    } = await (await fetch(timeUrl)).json();\n    const modifiedData = statewise.map(stateData => ({\n      active: stateData.active,\n      confirmed: stateData.confirmed,\n      deaths: stateData.deaths,\n      recovered: stateData.recovered,\n      state: stateData.state,\n      lastupdate: stateData.lastupdatedtime\n    }));\n    return modifiedData;\n  } catch (error) {}\n}; // Fetch Total India data\n\nexport const fetchTotalStateWise = async () => {\n  try {\n    const {\n      statewise\n    } = await (await fetch(timeUrl)).json();\n    const modifiedData = statewise.map(stateData => ({\n      active: stateData.active,\n      confirmed: stateData.confirmed,\n      deaths: stateData.deaths,\n      recovered: stateData.recovered,\n      state: stateData.state,\n      lastupdate: stateData.lastupdatedtime\n    }));\n    return modifiedData;\n  } catch (error) {}\n}; // Query out the url data which is displayed in tabular.js\n\nexport const fetchData = async () => {\n  try {\n    const {\n      data\n    } = await (await fetch(url)).json();\n    const modifiedData = [...data.regional].sort((a, b) => b.totalConfirmed - a.totalConfirmed);\n    return modifiedData;\n  } catch (error) {}\n}; // Query out the url data which is displayed in summary.jsx\n\nexport const fetchSummary = async () => {\n  try {\n    const {\n      data\n    } = await (await fetch(url)).json();\n    const modifiedData = {\n      total: data.summary.total,\n      discharged: data.summary.discharged,\n      deaths: data.summary.deaths\n    };\n    return modifiedData;\n  } catch (error) {}\n};\nexport const fetchDataRecovered = async () => {\n  try {\n    const {\n      data\n    } = await (await fetch(url)).json();\n    const modifiedData = [...data.regional]; // const modifiedData = [...data.regional].sort((a, b) => b.discharged - a.discharged)\n\n    return modifiedData;\n  } catch (error) {}\n};\nexport const fetchDataDeaths = async () => {\n  try {\n    const {\n      data\n    } = await (await fetch(url)).json();\n    const modifiedData = [...data.regional].sort((a, b) => b.deaths - a.deaths);\n    return modifiedData;\n  } catch (error) {}\n};","map":{"version":3,"sources":["/Users/khaidemsandipsingha/Documents/CoronaIndia2/covidIndia2/src/api/fetchApi.js"],"names":["url","timeUrl","fetchTimeData","cases_time_series","fetch","json","modifiedData","map","timeData","confirmed","totalconfirmed","deaths","totaldeceased","recovered","totalrecovered","active","date","error","fetchStateWise","statewise","stateData","state","lastupdate","lastupdatedtime","fetchTotalStateWise","fetchData","data","regional","sort","a","b","totalConfirmed","fetchSummary","total","summary","discharged","fetchDataRecovered","fetchDataDeaths"],"mappings":"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","sourcesContent":["const url = 'https://api.rootnet.in/covid19-in/stats/latest'\n// const url = 'https://api.covid19india.org/state_district_wise.json'\nconst timeUrl = 'https://api.covid19india.org/data.json'\n\n// Fetch Time series line graph\nexport const fetchTimeData = async () => {\n    try {\n        const { cases_time_series } = await (await fetch(timeUrl)).json();\n        const modifiedData = cases_time_series.map((timeData) => ({\n            confirmed: timeData.totalconfirmed,\n            deaths: timeData.totaldeceased,\n            recovered: timeData.totalrecovered,\n            active: timeData.totalconfirmed - timeData.totaldeceased - timeData.totalrecovered,\n            date: timeData.date\n        }))\n        return modifiedData\n    } catch (error) {\n\n    }\n}\n\n// Fetch State wise details\nexport const fetchStateWise = async () => {\n    try {\n        const { statewise } = await (await fetch(timeUrl)).json();\n        const modifiedData = statewise.map((stateData) => ({\n            active: stateData.active,\n            confirmed: stateData.confirmed,\n            deaths: stateData.deaths,\n            recovered: stateData.recovered,\n            state: stateData.state,\n            lastupdate: stateData.lastupdatedtime\n        }))\n        return modifiedData\n    } catch (error) {\n\n    }\n}\n\n// Fetch Total India data\nexport const fetchTotalStateWise = async () => {\n    try {\n        const { statewise } = await (await fetch(timeUrl)).json();\n        const modifiedData = statewise.map((stateData) => ({\n            active: stateData.active,\n            confirmed: stateData.confirmed,\n            deaths: stateData.deaths,\n            recovered: stateData.recovered,\n            state: stateData.state,\n            lastupdate: stateData.lastupdatedtime\n        }))\n        return modifiedData\n    } catch (error) {\n\n    }\n}\n\n// Query out the url data which is displayed in tabular.js\nexport const fetchData = async () => {\n    try {\n        const { data } = await (await fetch(url)).json();\n        const modifiedData = [...data.regional].sort((a, b) => b.totalConfirmed - a.totalConfirmed)\n        return modifiedData;\n\n    } catch (error) {\n\n    }\n}\n\n// Query out the url data which is displayed in summary.jsx\nexport const fetchSummary = async () => {\n\n    try {\n        const { data } = await (await fetch(url)).json();\n        const modifiedData = {\n            total: data.summary.total,\n            discharged: data.summary.discharged,\n            deaths: data.summary.deaths\n        }\n        return modifiedData;\n    } catch (error) {\n\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const fetchDataRecovered = async () => {\n    try {\n        const { data } = await (await fetch(url)).json();\n        const modifiedData = [...data.regional]\n        // const modifiedData = [...data.regional].sort((a, b) => b.discharged - a.discharged)\n        return modifiedData;\n\n    } catch (error) {\n\n    }\n}\n\nexport const fetchDataDeaths = async () => {\n    try {\n        const { data } = await (await fetch(url)).json();\n        const modifiedData = [...data.regional].sort((a, b) => b.deaths - a.deaths)\n        return modifiedData;\n\n    } catch (error) {\n\n    }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}